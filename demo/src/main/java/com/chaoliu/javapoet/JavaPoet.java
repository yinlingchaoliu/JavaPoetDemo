package com.chaoliu.javapoet;

import com.squareup.javapoet.FieldSpec;
import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.MethodSpec;
import com.squareup.javapoet.TypeSpec;

import java.io.IOException;

import javax.lang.model.element.Modifier;

public final class JavaPoet {

    private static final String SUFFIX = "_ViewBinding";

    private static final String JAVA_DOC = "DO NOT EDIT THIS FILE!!! IT WAS GENERATED BY CHENTONG.\n";

    public static void main(String[] args) {

        try {
            gennerateCode(JavaPoet.class);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    private static void gennerateCode(Class target) throws ClassNotFoundException, IOException {

        //类全路径
        String qualifiedName = target.getName().toString();
        //包名
        String packageName = qualifiedName.substring( 0, qualifiedName.lastIndexOf( "." ) );
        //类文件
        String fileName = target.getSimpleName() + SUFFIX;

        //eg：public class FirstActivity_ViewBinding implements Unbinder
        //构造类
        TypeSpec.Builder typeBuilder = TypeSpec.classBuilder( fileName )
                .addJavadoc( JAVA_DOC )
                .addModifiers( Modifier.PUBLIC )
                .addSuperinterface( Unbinder.class );

        //eg:private FirstActivity target;
        FieldSpec fieldSpec = FieldSpec.builder( target,"target",Modifier.PRIVATE ).build();

        //field添加当前类中
        typeBuilder.addField( fieldSpec );

        //eg:@UiThread
        //  public FirstActivity_ViewBinding(FirstActivity target, View source) {
        //    this.target = target;
        //    target.helloTv = source.findViewById( R.id.helloTv );
        //  }
        //构造方法
        MethodSpec.Builder constructorBuilder = MethodSpec.constructorBuilder()
//                                    .addAnnotation( UiThread.class )
                                    .addModifiers( Modifier.PUBLIC )
                                    .addParameter( target,"target" )
                                    .addParameter( View.class,"source" );

        constructorBuilder.addStatement( "this.target = target" );
        constructorBuilder.addStatement( "target.helloTv = source.findViewById( R.id.helloTv )" );


        //构造方法添加到类中
        typeBuilder.addMethod( constructorBuilder.build() );

        //eg:@Override
        //  public void unbind() {
        //    target.helloTv = null;
        //  }
        //解绑方法
        MethodSpec.Builder unbindBuilder = MethodSpec.methodBuilder( "unbind" )
                .addAnnotation( Override.class )
                .addModifiers( Modifier.PUBLIC )
                .returns( void.class );

        unbindBuilder.addStatement( "target.helloTv = null" );

        //解绑方法添加类中
        typeBuilder.addMethod( unbindBuilder.build() );

        //创建文件 并且输出打印到到System.out
        JavaFile.builder( packageName, typeBuilder.build()).build().writeTo( System.out );
    }

}
